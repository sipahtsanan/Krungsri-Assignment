{
	"info": {
		"_postman_id": "c5ddff74-e051-47ce-85d6-b3f25c2aba32",
		"name": "PostmanAPI_testDemo",
		"description": "The Postman API allows you to programmatically access data stored in Postman account with ease.\n\nThe easiest way to get started with the API is to click the **fork** button to fork this collection to your own workspace and use Postman to send requests.\n\n\n# Overview\n\n1. You need a valid <a href=\"#authentication\">API Key</a> to send requests to the API endpoints. You can get your key from the [integrations dashboard](https://go.postman.co/settings/me/api-keys).\n\n1. The API has an access <a href=\"#rate-limits\">rate limit</a> applied to it.\n\n1. The Postman API will only respond to secured communication done over HTTPS. HTTP requests will be sent a `301` redirect to corresponding HTTPS resources.\n\n1. Response to every request is sent in [JSON format](https://en.wikipedia.org/wiki/JSON). In case the API request results in an error, it is represented by an `\"error\": {}` key in the JSON response.\n\n1. The request method (verb) determines the nature of action you intend to perform. A request made using the `GET` method implies that you want to fetch something from Postman, and `POST` implies you want to save something new to Postman.\n\n1. The API calls will respond with appropriate [HTTP status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) for all requests. Within Postman Client, when a response is received, the status code is highlighted and is accompanied by a help text that indicates the possible meaning of the response code. A `200 OK` indicates all went well, while `4XX` or `5XX` response codes indicate an error from the requesting client or our API servers respectively.\n\n1. Individual resources in your Postman Account is accessible using its unique id (`uid`). The `uid` is a simple concatenation of the resource owner's user-id and the resource-id. For example, a collection's `uid` is `{{owner_id}}-{{collection_id}}`.\n\n# Authentication\n\nAn API Key is required to be sent as part of every request to the Postman API, in the form of an `X-Api-Key` request header.\n\n> If you do not have an API Key, you can easily generate one by heading over to the [Postman Integrations Dashboard](https://go.postman.co/integrations/services/pm_pro_api).\n\nAn API Key tells our API server that the request it received came from you. Everything that you have access to in Postman is accessible with an API Key that is generated by you.\n\nFor ease of use inside Postman, you could store your API key in an [environment variable](https://www.getpostman.com/docs/environments) called `postman_api_key` and this [Collection](https://www.getpostman.com/docs/collections) will automatically use it to make API calls.\n\n## API Key related error response\n\nIf an API Key is missing, malformed, or invalid, you will receive a `401 Unauthorised` response code and the following JSON response:\n\n```\n{\n  \"error\": { \n    \"name\": \"AuthenticationError\",\n    \"message\": \"API Key missing. Every request requires an API Key to be sent.\"\n  }\n}\n```\n\n## Using the API Key as a query parameter\n\nEvery request that accepts API Key as `X-Api-Key` request header, also accepts the key when sent as `apikey` URL query parameter.\n\nAPI key sent as part of the header has a higher priority in case you send the key using both request header and query parameter.\n\n\n# Rate Limits\n\nAPI access rate limits are applied at a per-key basis in unit time. Access to the API using a key is limited to **60 requests per minute**. In addition, every API response is accompanied by the following set of headers to identify the status of your consumption.\n\n\n| Header                  | Description |\n|-------------------------|-------------|\n| `X-RateLimit-Limit`     | The maximum number of requests that the consumer is permitted to make per minute. |\n| `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |\n| `X-RateLimit-Reset`     | The time at which the current rate limit window resets in UTC epoch seconds. |\n\n\nOnce you hit the rate limit, you will receive a response similar to the following JSON, with a status code of `429 Too Many Requests`.\n\n```json\n{\n  \"error\": {\n    \"name\": \"rateLimitError\",\n    \"message\": \"Rate Limit exceeded. Please retry at 1465452702843\"\n  }\n}\n```\n\n\n# Support\n\nFor help regarding accessing the Postman API, feel free to discuss it in our [Discourse Community](https://community.getpostman.com). You can also drop in a line at [help@getpostman.com](mailto:help@getpostman.com).\n\nIn the event you receive a `503` response from our servers, it implies that we have hit an unexpected spike in API access traffic and would usually be operational within the next 5 minutes. If the outage persists, or your receive any other form of `5XX` error, kindly let us know.\n\n\n# Terms of Use\n\nFor information on API terms of use and privacy, refer to our policy document at [https://www.getpostman.com/licenses/privacy](https://www.getpostman.com/licenses/privacy)\n\n# API Reference",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Environments",
			"item": [
				{
					"name": "Verify get all environments",
					"item": [
						{
							"name": "All Environments",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON;",
											"",
											"// parse response body as JSON",
											"try { responseJSON = JSON.parse(responseBody); } catch (e) { }",
											"tests['received a valid response JSON'] = !!responseJSON;",
											"!responseJSON && (responseJSON = {});",
											"",
											"tests['status code is 200'] = (responseCode.code === 200);",
											"tests['response does not have errors'] = (!responseJSON.error);",
											"",
											"tests['response has an array of environments'] = Array.isArray(responseJSON.environments);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									]
								},
								"description": "The `/environments` endpoint returns a list of all [environments](https://www.getpostman.com/docs/environments) that belong to you..\n\nThe response contains an array of environments' information containing the `name`, `id`, `owner` and `uid` of each environment.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Valid Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environments\": [\n        {\n            \"id\": \"357668d2-84f1-2264-438b-113095359f80\",\n            \"name\": \"Postman Cloud API\",\n            \"owner\": \"631643\",\n            \"uid\": \"631643-357668d2-84f1-2264-438b-113095359f80\"\n        },\n        {\n            \"id\": \"84a119b6-f4b1-9120-5f11-a73b17818d70\",\n            \"name\": \"Postman Cloud API.template\",\n            \"owner\": \"631643\",\n            \"uid\": \"631643-84a119b6-f4b1-9120-5f11-a73b17818d70\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Verify get Single Environment",
					"item": [
						{
							"name": "Create Environment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Set variable as environment data\", () => {",
											"    const jsonData = JSON.parse(responseBody);",
											"    postman.setEnvironmentVariable('environment_id',jsonData.environment.id);",
											"    postman.setEnvironmentVariable('environment_uid',jsonData.environment.uid);",
											"    postman.setEnvironmentVariable('environment_name',jsonData.environment.name);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\n                \"key\": \"variable_name_1\",\n                \"value\": \"The value of the variable\"\n            },\n            {\n                \"key\": \"variable_name_2\",\n                \"value\": \"\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									]
								},
								"description": "A sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"environment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n              \"type\": \"string\",\n              \"maxLength\": 254,\n              \"minLength\": 1\n            },\n        \"values\": {\n          \"type\": \"array\",\n          \"maxItems\": 100,\n          \"additionalItems\": false,\n          \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"maxLength\": 254\n                  \"minLength\": 1\n                },\n                \"value\": { \"type\": \"string\" },\n                \"enabled\": { \"type\": \"boolean\" }\n              },\n              \"required\": [\"key\", \"value\"]\n            }\n        }\n      },\n      \"required\": [\"name\"]\n    }\n  },\n  \"required\": [\"environment\"]\n}\n```\n\nOn successful creation of the environment, the API returns the environment name and `id`.\n\nYou can also specify the context of a workspace to create an environment in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Create Environment in a Workspace",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\n                \"key\": \"variable_name_1\",\n                \"value\": \"The value of the variable\"\n            },\n            {\n                \"key\": \"variable_name_2\",\n                \"value\": \"\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments?workspace={{workspace_id}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspace_id}}",
													"description": "The workspace ID in which the environment will be created"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n        \"name\": \"Sample Environment Name (required)\",\n        \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n    }\n}"
								},
								{
									"name": "Failure Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/environments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Missing required property: environment\"\n    }\n}"
								},
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\"key\": \"variable_name_1\", \"value\": \"The value of the variable\"},\n            {\"key\": \"variable_name_2\", \"value\": \"\"}\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n        \"name\": \"Sample Environment Name (required)\",\n        \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n    }\n}"
								}
							]
						},
						{
							"name": "Single Environment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJSON;",
											"",
											"// parse response body as JSON",
											"try { responseJSON = JSON.parse(responseBody); } catch (e) { }",
											"tests['received a valid response JSON'] = !!responseJSON;",
											"!responseJSON && (responseJSON = {});",
											"",
											"tests['status code is 200'] = (responseCode.code === 200);",
											"tests['response does not have errors'] = (!responseJSON.error);",
											"",
											"tests['response has an environment object'] = (typeof responseJSON.environment === 'object');",
											"",
											"pm.test(\"Verify get the single environment\", function () {",
											"    const jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.environment.id).to.eql(pm.environment.get('environment_id'));",
											"    pm.expect(jsonData.environment.uid).not.eql(pm.environment.get('environment_name'));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/{{environment_uid}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"{{environment_uid}}"
									]
								},
								"description": "Access the contents of an environment that is accessible to you using its unique id (`uid`).\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Valid Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments/{{environment_uid}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"{{environment_uid}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"84a119b6-f4b1-9120-5f11-a73b17818d70\",\n        \"name\": \"Postman Cloud API.template\",\n        \"values\": [\n            {\n                \"key\": \"postman_api_key\",\n                \"value\": \"\",\n                \"type\": \"text\",\n                \"enabled\": true,\n                \"hovered\": false\n            }\n        ]\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Verify create Environment",
					"item": [
						{
							"name": "Create Environment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Set variable as environment_uid\", () => {",
											"    const jsonData = JSON.parse(responseBody);",
											"    postman.setEnvironmentVariable('environment_create_id',jsonData.environment.id);",
											"    postman.setEnvironmentVariable('environment_create_uid',jsonData.environment.uid);",
											"    postman.setEnvironmentVariable('environment_create_name',jsonData.environment.name);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\n                \"key\": \"variable_name_1\",\n                \"value\": \"The value of the variable\"\n            },\n            {\n                \"key\": \"variable_name_2\",\n                \"value\": \"\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									]
								},
								"description": "A sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"environment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n              \"type\": \"string\",\n              \"maxLength\": 254,\n              \"minLength\": 1\n            },\n        \"values\": {\n          \"type\": \"array\",\n          \"maxItems\": 100,\n          \"additionalItems\": false,\n          \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"maxLength\": 254\n                  \"minLength\": 1\n                },\n                \"value\": { \"type\": \"string\" },\n                \"enabled\": { \"type\": \"boolean\" }\n              },\n              \"required\": [\"key\", \"value\"]\n            }\n        }\n      },\n      \"required\": [\"name\"]\n    }\n  },\n  \"required\": [\"environment\"]\n}\n```\n\nOn successful creation of the environment, the API returns the environment name and `id`.\n\nYou can also specify the context of a workspace to create an environment in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Failure Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/environments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Missing required property: environment\"\n    }\n}"
								},
								{
									"name": "Create Environment in a Workspace",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\n                \"key\": \"variable_name_1\",\n                \"value\": \"The value of the variable\"\n            },\n            {\n                \"key\": \"variable_name_2\",\n                \"value\": \"\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments?workspace={{workspace_id}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspace_id}}",
													"description": "The workspace ID in which the environment will be created"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n        \"name\": \"Sample Environment Name (required)\",\n        \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n    }\n}"
								},
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\"key\": \"variable_name_1\", \"value\": \"The value of the variable\"},\n            {\"key\": \"variable_name_2\", \"value\": \"\"}\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n        \"name\": \"Sample Environment Name (required)\",\n        \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n    }\n}"
								}
							]
						},
						{
							"name": "Single Environment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJSON;",
											"",
											"// parse response body as JSON",
											"try { responseJSON = JSON.parse(responseBody); } catch (e) { }",
											"tests['received a valid response JSON'] = !!responseJSON;",
											"!responseJSON && (responseJSON = {});",
											"",
											"tests['status code is 200'] = (responseCode.code === 200);",
											"tests['response does not have errors'] = (!responseJSON.error);",
											"",
											"tests['response has an environment object'] = (typeof responseJSON.environment === 'object');",
											"",
											"pm.test(\"Verify the data after created\", function () {",
											"    const jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.environment.id).to.eql(pm.environment.get('environment_create_id'));",
											"    pm.expect(jsonData.environment.uid).not.eql(pm.environment.get('environment_create_name'));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/{{environment_create_uid}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"{{environment_create_uid}}"
									]
								},
								"description": "Access the contents of an environment that is accessible to you using its unique id (`uid`).\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Valid Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments/{{environment_uid}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"{{environment_uid}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"84a119b6-f4b1-9120-5f11-a73b17818d70\",\n        \"name\": \"Postman Cloud API.template\",\n        \"values\": [\n            {\n                \"key\": \"postman_api_key\",\n                \"value\": \"\",\n                \"type\": \"text\",\n                \"enabled\": true,\n                \"hovered\": false\n            }\n        ]\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Verify update Environt",
					"item": [
						{
							"name": "Create Environment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Set variable as environment_uid\", () => {",
											"    const jsonData = JSON.parse(responseBody);",
											"    postman.setEnvironmentVariable('environment_update_id',jsonData.environment.id);",
											"    postman.setEnvironmentVariable('environment_update_uid',jsonData.environment.uid);",
											"    postman.setEnvironmentVariable('environment_update_name',jsonData.environment.name);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\n                \"key\": \"variable_name_1\",\n                \"value\": \"The value of the variable\"\n            },\n            {\n                \"key\": \"variable_name_2\",\n                \"value\": \"\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									]
								},
								"description": "A sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"environment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n              \"type\": \"string\",\n              \"maxLength\": 254,\n              \"minLength\": 1\n            },\n        \"values\": {\n          \"type\": \"array\",\n          \"maxItems\": 100,\n          \"additionalItems\": false,\n          \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"maxLength\": 254\n                  \"minLength\": 1\n                },\n                \"value\": { \"type\": \"string\" },\n                \"enabled\": { \"type\": \"boolean\" }\n              },\n              \"required\": [\"key\", \"value\"]\n            }\n        }\n      },\n      \"required\": [\"name\"]\n    }\n  },\n  \"required\": [\"environment\"]\n}\n```\n\nOn successful creation of the environment, the API returns the environment name and `id`.\n\nYou can also specify the context of a workspace to create an environment in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Create Environment in a Workspace",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\n                \"key\": \"variable_name_1\",\n                \"value\": \"The value of the variable\"\n            },\n            {\n                \"key\": \"variable_name_2\",\n                \"value\": \"\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments?workspace={{workspace_id}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspace_id}}",
													"description": "The workspace ID in which the environment will be created"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n        \"name\": \"Sample Environment Name (required)\",\n        \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n    }\n}"
								},
								{
									"name": "Failure Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/environments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Missing required property: environment\"\n    }\n}"
								},
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\"key\": \"variable_name_1\", \"value\": \"The value of the variable\"},\n            {\"key\": \"variable_name_2\", \"value\": \"\"}\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n        \"name\": \"Sample Environment Name (required)\",\n        \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Environment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Set variable as environment_new_name\", function () {",
											"    const jsonData = JSON.parse(responseBody);",
											"    postman.setEnvironmentVariable('environment_new_name',jsonData.environment.name);",
											"});",
											"pm.test(\"Verify the data after update\", function () {",
											"    const jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.environment.uid).to.eql(pm.environment.get('environment_update_uid'));",
											"    pm.expect(jsonData.environment.uid).not.eql(pm.environment.get('environment_update_name'));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"New Name\",\n        \"values\": [\n            {\n                \"key\": \"name\",\n                \"value\": \"Bruce Wayne\"\n            },\n            {\n                \"key\": \"occupation\",\n                \"value\": \"Vigilante\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/environments/{{environment_update_uid}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"{{environment_update_uid}}"
									]
								},
								"description": "This endpoint replaces an existing environment.\n\nA sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"environment\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\"minLength\": 1\n\t\t\t\t},\n\t\t\t\t\"values\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"maxItems\": 100,\n\t\t\t\t\t\"additionalItems\": false,\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"key\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\t\t\t\"minLength\": 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"value\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\t\t\t\"minLength\": 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"type\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"enabled\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\"key\",\n\t\t\t\t\t\t\t\"value\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"environment\"\n\t]\n}\n```\n\nOn successful updation of the environment, the API returns the environment name and `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Failure Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"environment\": {\n        \"name\": \"New Name\",\n        \"values\": [\n            null,\n            {\n                \"key\": \"occupation\",\n                \"value\": \"Vigilante\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/{{environment_uid}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"{{environment_uid}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Invalid type: null (expected object) at environment.values.0\"\n    }\n}"
								},
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"environment\": {\n        \"name\": \"New Name\",\n        \"values\": [\n            {\n                \"key\": \"name\",\n                \"value\": \"Bruce Wayne\"\n            },\n            {\n                \"key\": \"occupation\",\n                \"value\": \"Vigilante\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments/{{environment_uid}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"{{environment_uid}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"357668d2-84f1-2264-438b-113095359f80\",\n        \"name\": \"New Name\",\n        \"uid\": \"631643-357668d2-84f1-2264-438b-113095359f80\"\n    }\n}"
								}
							]
						},
						{
							"name": "Single Environment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJSON;",
											"",
											"// parse response body as JSON",
											"try { responseJSON = JSON.parse(responseBody); } catch (e) { }",
											"tests['received a valid response JSON'] = !!responseJSON;",
											"!responseJSON && (responseJSON = {});",
											"",
											"tests['status code is 200'] = (responseCode.code === 200);",
											"tests['response does not have errors'] = (!responseJSON.error);",
											"",
											"pm.test(\"Verify the data after update\", function () {",
											"    const jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.environment.id).to.eql(pm.environment.get('environment_update_id'));",
											"    pm.expect(jsonData.environment.uid).not.eql(pm.environment.get('environment_new_name'));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/{{environment_update_uid}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"{{environment_update_uid}}"
									]
								},
								"description": "Access the contents of an environment that is accessible to you using its unique id (`uid`).\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Valid Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments/{{environment_uid}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"{{environment_uid}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"84a119b6-f4b1-9120-5f11-a73b17818d70\",\n        \"name\": \"Postman Cloud API.template\",\n        \"values\": [\n            {\n                \"key\": \"postman_api_key\",\n                \"value\": \"\",\n                \"type\": \"text\",\n                \"enabled\": true,\n                \"hovered\": false\n            }\n        ]\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Verify delete Environment",
					"item": [
						{
							"name": "Create Environment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Set variable as environment_uid\", () => {",
											"    const jsonData = JSON.parse(responseBody);",
											"    postman.setEnvironmentVariable('environment_uid_delete',jsonData.environment.uid);",
											"    postman.setEnvironmentVariable('environment_name_delete',jsonData.environment.name);",
											"    postman.setEnvironmentVariable('environment_id_delete',jsonData.environment.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\n                \"key\": \"variable_name_1\",\n                \"value\": \"The value of the variable\"\n            },\n            {\n                \"key\": \"variable_name_2\",\n                \"value\": \"\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/environments",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments"
									]
								},
								"description": "A sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"environment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n              \"type\": \"string\",\n              \"maxLength\": 254,\n              \"minLength\": 1\n            },\n        \"values\": {\n          \"type\": \"array\",\n          \"maxItems\": 100,\n          \"additionalItems\": false,\n          \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"maxLength\": 254\n                  \"minLength\": 1\n                },\n                \"value\": { \"type\": \"string\" },\n                \"enabled\": { \"type\": \"boolean\" }\n              },\n              \"required\": [\"key\", \"value\"]\n            }\n        }\n      },\n      \"required\": [\"name\"]\n    }\n  },\n  \"required\": [\"environment\"]\n}\n```\n\nOn successful creation of the environment, the API returns the environment name and `id`.\n\nYou can also specify the context of a workspace to create an environment in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Create Environment in a Workspace",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\n                \"key\": \"variable_name_1\",\n                \"value\": \"The value of the variable\"\n            },\n            {\n                \"key\": \"variable_name_2\",\n                \"value\": \"\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments?workspace={{workspace_id}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspace_id}}",
													"description": "The workspace ID in which the environment will be created"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n        \"name\": \"Sample Environment Name (required)\",\n        \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n    }\n}"
								},
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"name": "Content-Type",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"environment\": {\n        \"name\": \"Sample Environment Name (required)\",\n        \"values\": [\n            {\"key\": \"variable_name_1\", \"value\": \"The value of the variable\"},\n            {\"key\": \"variable_name_2\", \"value\": \"\"}\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.getpostman.com/environments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n        \"name\": \"Sample Environment Name (required)\",\n        \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n    }\n}"
								},
								{
									"name": "Failure Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \n}"
										},
										"url": {
											"raw": "https://api.getpostman.com/environments",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Missing required property: environment\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete Environment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Deleted successfully\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify the data after deleted\", function () {",
											"    const jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.environment.uid).to.eql(pm.environment.get('environment_uid_delete'));",
											"    pm.expect(jsonData.environment.id).to.eql(pm.environment.get('environment_id_delete'));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/{{environment_uid_delete}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"{{environment_uid_delete}}"
									]
								},
								"description": "This endpoint allows you to delete a single environment based on an environment's unique `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Environment Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments/{{environment_uid}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"{{environment_uid}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce\",\n        \"uid\": \"5852-4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce\"\n    }\n}"
								},
								{
									"name": "Environment Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments/{{environment_uid}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"{{environment_uid}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified environment does not exist.\"\n    }\n}"
								}
							]
						},
						{
							"name": "Single Environment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseJSON;",
											"",
											"// parse response body as JSON",
											"try { responseJSON = JSON.parse(responseBody); } catch (e) { }",
											"tests['received a valid response JSON'] = !!responseJSON;",
											"!responseJSON && (responseJSON = {});",
											"",
											"tests['status code is 404'] = (responseCode.code === 404);",
											"tests['response should have errors'] = (responseJSON.error);",
											"",
											"pm.test(\"Verify an error message\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"We could not find the environment you are looking for\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/environments/{{environment_uid_delete}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"environments",
										"{{environment_uid_delete}}"
									]
								},
								"description": "Access the contents of an environment that is accessible to you using its unique id (`uid`).\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"name": "Valid Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.getpostman.com/environments/{{environment_uid}}",
											"protocol": "https",
											"host": [
												"api",
												"getpostman",
												"com"
											],
											"path": [
												"environments",
												"{{environment_uid}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": {
												"content": "",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n    \"environment\": {\n        \"id\": \"84a119b6-f4b1-9120-5f11-a73b17818d70\",\n        \"name\": \"Postman Cloud API.template\",\n        \"values\": [\n            {\n                \"key\": \"postman_api_key\",\n                \"value\": \"\",\n                \"type\": \"text\",\n                \"enabled\": true,\n                \"hovered\": false\n            }\n        ]\n    }\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{postman_api_key}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "postman_api_key",
			"value": "PMAK-602baf420e72920035173296-319ca19c21e25ce5876d484971b8adb4fc"
		}
	]
}